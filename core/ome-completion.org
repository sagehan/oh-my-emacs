#+TITLE: Oh My Emacs Completion
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[https://github.com/xiaohanyu/oh-my-emacs][oh-my-emacs]].

* El-get Packages
  :PROPERTIES:
  :CUSTOM_ID: completion-el-get-packages
  :END:

#+NAME: completion-el-get-packages
#+CAPTION: El-get packages for ome-completion module
|               | Status   | Description                                 |
|---------------+----------+---------------------------------------------|
| [[https://github.com/emacs-helm/helm][helm]]          | Required | Completion everywhere, highly recommended.  |
| [[https://github.com/capitaomorte/yasnippet][YASnippet]]     | Required | Quick snippet template insertion.           |

* Hippie expand
=M-x hippie-expand= is a single command providing a variety of completions and
expansions. The following code segment comes from [[https://github.com/bbatsov/prelude][Emacs Prelude]].

#+name: hippie-expand
#+BEGIN_SRC emacs-lisp
;; hippie expand is dabbrev expand on steroids
(setq hippie-expand-try-functions-list '(try-expand-dabbrev
                                         try-expand-dabbrev-all-buffers
                                         try-expand-dabbrev-from-kill
                                         try-complete-file-name-partially
                                         try-complete-file-name
                                         try-expand-all-abbrevs
                                         try-expand-list
                                         try-expand-line
                                         try-complete-lisp-symbol-partially
                                         try-complete-lisp-symbol))
#+END_SRC

* Helm
  :PROPERTIES:
  :CUSTOM_ID: helm
  :END:

[[https://github.com/emacs-helm/helm][Helm]] is a incremental completion and selection narrowing framework for
emacs. It will help steer you in the right direction when you're looking for
stuff in Emacs (like buffers, files, etc). Helm is a fork of =anything.el=,
which clean up the legacy code in =anything.el= and provide a cleaner and more
modular tool.

Actually, helm is not the only [[http://ergoemacs.org/emacs/emacs_name_completion.html][name completion packages in emacs]], there're
other choices--of course you always have choices in emacs, for example, the
builtin [[http://www.masteringemacs.org/articles/2010/10/10/introduction-to-ido-mode/][ido-mode]] is quite a good choice. I also heard of [[http://www.emacswiki.org/emacs/Icicles][icicles]] to be the most
powerful, but I found its documentatin really awkward. I choose helm since it
is easy to install and config, user-friendly, powerful enough and quite
intuitive to boost your workflow.

To wrap your mind around the helm way, you need to remember a few key
bindings. When helm starts, remember:
- access the helm action menu with =TAB=. Maybe this is the most whirlwind
  turnaround since most name completion packages use =TAB= as completion
  key. Don't worry, helm doesn't need too much completion, since helm provides
  name completion by navigation instead by using =TAB= to complete character by
  character. Actually, the helm =TAB= brings you a new world, in which you
  combine several tasks into a series of successive keystrokes and get your job
  done.
- Use persistent actions with =C-z=.
- Mark candidate with =M-<SPACE>=, thus you can do batch processing through helm.

The [[https://github.com/emacs-helm/helm/wiki][helm wiki]] is a good place to explore this new world, but it's a little long
and not complete enough to cover all helm power. You can access helm functions
through the emacs menubar if want to use helm but don't want to remember too
much helm key bindings. Some shortcuts:
- =C-x c l=: =helm-locate=
- =C-x c /=: =helm-find=
- =C-x c f=: =helm-for-files=
- =C-x c M-x=: =helm-M-x=
- =C-x c a=: =helm-apropos=
- =C-x c r=: =helm-regexp=
- =C-x c c=: =helm-colors=
- =C-x c 8=: =helm-ucs=
- =C-x c i=: =helm-imenu=
- =C-x c m=: =helm-man-woman=
- =C-x c t=: =helm-top=
- =C-x c p=: =helm-list-emacs-process=
- =C-x c M-y=: =helm-show-kill-ring=

To tell the truth, helm is one of my most favourite emacs packages. The more
you live with helm, the more you will find that you never want to come
back. Helm can replace many builtin or third-party emacs packages, or even
provide a better experience. For example, =helm-M-x= is a good competitor to
[[https://github.com/nonsequitur/smex][smex]], =helm-show-kill-ring= provides a better way to interact with emacs kill
ring than [[https://github.com/browse-kill-ring/browse-kill-ring][browse-kill-ring]]. Helm integrates various external tools(such as
=grep=, =find=, =locate=, =md5sum=, =etags=, etc.) to emacs in a highly
intuitive and interactive way. Helm can even help you install debian apt
packages. If you have any question, just type =M-x helm-google-suggest= and
then helm will fire a web browser opening google for you at your fingertip.

To fully adopt helm power, I also set some custom helm keybindings in
oh-my-emacs, you can change it as you like. Of course you can disable helm at
all, then oh-my-emacs will use some other packages such as =ido-mode= as a
fallback. But I do suggest you to take some time to be familiar with helm.

#+NAME: helm
#+BEGIN_SRC emacs-lisp
(defun ome-helm-setup ()
  (require 'helm-config)
  (setq helm-input-idle-delay 0.2)
  (helm-mode t)
  (setq helm-locate-command
        (case system-type
          ('gnu/linux "locate -i -r %s")
          ('berkeley-unix "locate -i %s")
          ('windows-nt "es %s")
          ('darwin "mdfind -name %s %s")
          (t "locate %s")))
  (global-set-key (kbd "C-x c g") 'helm-do-grep)
  (global-set-key (kbd "C-x c o") 'helm-occur)
  (global-set-key (kbd "M-x") 'helm-M-x)
  (global-set-key (kbd "C-x C-f") 'helm-find-files))

(ome-install 'helm)

#+END_SRC
* Yasnippet
  :PROPERTIES:
  :CUSTOM_ID: yasnippet
  :END:

[[https://github.com/capitaomorte/yasnippet][YASnippet]] is "Yet Another Snippet" expansion system for Emacs. It is inspired by
[[http://macromates.com/][TextMate]]'s templating syntax. You can see the [[http://capitaomorte.github.io/yasnippet/][intro and tutorial]] or watch this
[[http://www.youtube.com/watch?v%3DvOj7btx3ATg][video on youtube]] to get some basic knowledge.


TODO:
- The bundled snippets from official yasnippet is considered frozen, so you
  should add your own snippets if you want more. Maybe [[https://github.com/AndreaCrotti/yasnippet-snippets][yasnippet-snippets]] is a
  good starting point, but I think it's far from perfect, for example, the
  emacs-lisp snippet is not quite hard to use.

#+NAME: yasnippet
#+BEGIN_SRC emacs-lisp
(defun ome-yasnippet-setup ()
  (yas-global-mode)
  (global-company-mode)
  (global-set-key (kbd "C-x y") 'company-yasnippet))

(ome-install 'yasnippet)
#+END_SRC

* Todo

** Helm
Ah, various ideas to enhance helm:
- Provide a copy action which just copy the selected items. This is useful when
  you query a elisp command or function.
- Provide a doc action which show documentation of elisp function or commands.
- For helm-projectile, add full path to file list to differentiate same file
  name files.
